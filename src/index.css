:root {            /* Pseudo Class  <html> tag* :root targets the very top element of your document (the <html> tag in HTML)*/        
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: white;
  background-color: #030615;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}      

/* Univerisal selector, the style gets applied to literallt everything in the documnent, every html tag */

*{
  margin:0 ;   /* Setting the margin to 0, removing any predefined element margin */
  padding : 0; /* Setting the padding to 0, removing any predefined element padding*/
  box-sizing : border-box; /* Best practice for managing the CSS box model, includes padding and border */
}

/* This enables us to remove inconsistent default browser spacing and make element sizing predictable  */

/* If you want to style using ID, you use # { pound } */

#root {
  min-height: 100vh;   /* Takes 100% of the viewport { the visible area within a browser window } */
  display: flex; 
  position: relative; /*  Establishes a positioning context for any absolutely positioned child elements within it. */
}

/* The root ID is associated the div element that React uses to display your final applciation */
/* Applying display: flex; makes the direct children of #root become flex items, and by default, they will arrange themselves in a row (left-to-right)*/

/* If you want to style using className, you use . */

.bgImage {
  width: 100%;    /* Fills 100% of parent's width */
  height : 100%; /* Fills 100% of parent's height */
  flex: 1;  /* shorthand for flex-grow: 1; flex-shrink :1;  flex-basis : 0%      --  Allows the element to grow or shrink based on the available space*/  
  object-fit: cover; /* The actual image/video content inside this element will be stretched to completely cover its own allocated space, cropped if its original proportion don't match */
}

/* Using this to make the image look more aesthetic*/

.imgContainer {
  display: flex;   /* converts the element to a flex container */ 
  flex-direction: column; /* display direction will now be top-down */
}

/* If you want to style using tag, you use tag name iteself */

footer {
  position: fixed; /* The footer is now removed from the normal document flo, it doesn't depend on #root anymore*/ 
  bottom: 0; /*Positions the bottom edge of the footer at 0 pixels from the bottom edge of the viewport.*/
  left: 0; /*Positions the left  edge of the footer at 0 pixels from the left edge of the viewport.*/
  width : 100%; /* Makes the footer stretch 100% of the viewport's width */
}